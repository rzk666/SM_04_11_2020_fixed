/* eslint-disable radix */
import React from 'react';

// ----- Help Functions ----- //
const getLeaguesArray = (matches) => {
  const leagues = [];
  matches.map((match) => {
    const { league } = match;
    if (!leagues.includes(league)) {
      leagues.push(league);
    }
  });
  return leagues;
};

class JoinLeagueController extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      currentPrice: '3',
      isModalOpen: false,
      currentLeaguePlayers: 0,
      currentLeagueMatches: 0,
    };
  }

  handlePriceChange(price) {
    this.setState({ currentPrice: price });
  }

  joinTable(type) {
    const {
      currentLeaguePlayers,
      currentPrice,
    } = this.state;
    const {
      auth, history, updateActiveTable,
    } = this.props;
    const { user } = auth;
    updateActiveTable({
      players: currentLeaguePlayers,
      leagues: ['Premiere League', 'La Liga', 'Champions League'],
      prizePool: parseInt(currentPrice) * currentLeaguePlayers,
      name: "BEAT'EM LEAGUE #1",
      description: 'This league was generated by our system',
      type,
      matches: [1, 2, 3, 4, 5, 6, 7, 8],
    }, user);
    history.push('/table');
  }

  toggleModal(players, matches) {
    const { isModalOpen } = this.state;
    this.setState({
      isModalOpen: !isModalOpen,
      currentLeaguePlayers: players,
      currentLeagueMatches: matches,
    });
  }

  callbacks() {
    return {
      handlePriceChange: this.handlePriceChange.bind(this),
      toggleModal: this.toggleModal.bind(this),
      joinTable: this.joinTable.bind(this),
    };
  }

  render() {
    const { View } = this.props;
    return (
      <View
        {...this.props}
        {...this.state}
        {...this.callbacks()}
      />
    );
  }
}

export default JoinLeagueController;
