{"version":3,"sources":["utils/nodeService.js","components/TasksTable/UserRow.module.scss","components/TasksTable/Table.module.scss","common/app-const.js","redux/models/users/usersReducer.js","redux/models/users/usersTypes.js","redux/models/auth/authReducer.js","redux/rootReducer.js","utils/HttpRequest.js","redux/api.js","redux/middlewares/api.js","redux/store/configureStore.js","redux/models/users/usersActions.js","common/config.js","controllers/HomeController.jsx","components/TasksTable/Filters.jsx","components/TasksTable/UserRow.jsx","components/TasksTable/Table.jsx","views/HomeView.jsx","pages/HomeIndex.jsx","App.jsx","universal/pages.js","index.jsx","components/TasksTable/Filters.module.scss","views/HomeView.module.scss"],"names":["svc","getNodeEnv","process","getNodeEnvByKey","key","Error","getNodeEnvMode","isProduction","isDevelopment","isTest","isServer","browser","module","exports","INITIAL_STATE","auth","token","users","isLoading","hasError","error","data","DEPARTMENTS","state","action","type","selected","selectedUsers","map","user","errorCode","id","newUsers","task","filteredUsers","filter","department_id","combineReducers","HttpRequest","options","headers","Authorization","axios","create","API","httpRequestAction","dispatch","a","payload","url","method","params","success","failure","loader","base","endpoint","Object","keys","length","res","message","api","getState","next","middlewares","thunk","NodeService","push","logger","store","initialState","createStore","rootReducer","applyMiddleware","usersIsLoading","PORT","usersGetData","usersHasError","HomeController","props","hideDepartment","fetchUsers","fetchUsersByDepartment","hideUnselectedUsers","hideUserTasks","fetchUserTasks","useState","selectedDepartments","filterByEmployee","setState","useEffect","reqParams","firstIndex","endIndex","orderBy","withTasks","callbacks","toggleDepartment","find","x","toggleFilterByEmployee","handleUserSelection","isSelected","View","Filters","className","styles","filters_container","filter_by_employee","Checkbox","onClick","toggle","checked","departments","department","i","label","User","avatar","name","alt","src","Task","title","color","style","backgroundColor","Selected","toggleSelection","selected_container","selected_box","UsersRow","classnames","row_container","loading","TableHeader","table_header","employees","days","Date","toDateString","Table","table_container","table_content","UserRow","no_users","HomeView","wrapper","tasks_manager_container","connect","departmentId","userGetTasks","userIsLoading","App","path","exact","render","HomeIndex","page","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45085de8.chunk.js","sourcesContent":["const svc = {\n  getNodeEnv() {\n    return process.env;\n  },\n  getNodeEnvByKey(key) {\n    if (!key) throw new Error('Key cannot be null/undefined');\n    return process.env[key];\n  },\n  getNodeEnvMode() {\n    return svc.getNodeEnvByKey('NODE_ENV') || 'test';\n  },\n  isProduction() {\n    return svc.getNodeEnvMode() === 'production';\n  },\n  isDevelopment() {\n    return svc.getNodeEnvMode() === 'development';\n  },\n  isTest() {\n    return !svc.getNodeEnvMode() || svc.getNodeEnvMode() === 'test';\n  },\n  isServer() {\n    return !process.browser;\n  },\n};\n\nexport default svc;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row_container\":\"UserRow_row_container__2T0kG\",\"loading\":\"UserRow_loading__2RL5j\",\"user\":\"UserRow_user__2eFnG\",\"avatar\":\"UserRow_avatar__3YvVV\",\"task\":\"UserRow_task__2d0ot\",\"selected_container\":\"UserRow_selected_container__1HXhC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table_container\":\"Table_table_container__1FGsZ\",\"table_content\":\"Table_table_content__1w7mp\",\"loading\":\"Table_loading__1ReMx\",\"table_header\":\"Table_table_header__2o2Vp\",\"employees\":\"Table_employees__1w1gM\",\"days\":\"Table_days__36Wac\",\"no_users\":\"Table_no_users__2vint\"};","export const INITIAL_STATE = {\n  auth: {\n    token: '',\n  },\n  users: {\n    isLoading: false,\n    hasError: false,\n    error: '',\n    // Hidden -> This might be usede in an idea I have to realise other stuff later\n    data: [],\n  },\n};\n\nexport const DEPARTMENTS = ['Sales', 'Marketing', 'CC', 'Product', 'HR', 'R&D', 'Research'];\n","// Initial state\nimport { INITIAL_STATE } from '../../../common/app-const';\n// Types\nimport {\n  USERS_HAS_ERROR,\n  USERS_IS_LOADING,\n  USER_IS_LOADING,\n  USERS_GET_DATA,\n  HIDE_DEPARTMENT,\n  HIDE_UNSELECTED,\n  USER_GET_TASKS,\n  HIDE_USER_TASKS,\n} from './usersTypes';\n\n// This is temp and will change soon\nconst users = (state = INITIAL_STATE.users, action) => {\n  switch (action.type) {\n    case USERS_IS_LOADING: {\n      return { ...state, isLoading: action.isLoading };\n    }\n    case USERS_GET_DATA: {\n      const { data } = state;\n      const { selected } = action;\n      const selectedUsers = action.data.map((user) => ({ ...user, selected }));\n      return {\n        ...state,\n        data: [...data, ...selectedUsers],\n        hasError: false,\n        errorCode: -1,\n      };\n    }\n    case USER_GET_TASKS: {\n      const { data } = state;\n      const { id } = action;\n      const newUsers = data.map((user) => {\n        if (user.id === id) {\n          return { ...user, selected: true, task: action.data };\n        }\n        return user;\n      });\n      return {\n        ...state,\n        data: newUsers,\n        hasError: false,\n        errorCode: -1,\n      };\n    }\n    case USER_IS_LOADING: {\n      const { data } = state;\n      const { id, isLoading } = action;\n      const newUsers = data.map((user) => {\n        if (user.id === id) {\n          return { ...user, isLoading };\n        }\n        return user;\n      });\n      return {\n        ...state,\n        data: newUsers,\n        hasError: false,\n        errorCode: -1,\n      };\n    }\n    case HIDE_USER_TASKS: {\n      const { data } = state;\n      const { id } = action;\n      const newUsers = data.map((user) => {\n        if (user.id === id) {\n          return { ...user, selected: false, task: {} };\n        }\n        return user;\n      });\n      return {\n        ...state,\n        data: newUsers,\n        hasError: false,\n        errorCode: -1,\n      };\n    }\n    case HIDE_UNSELECTED: {\n      const { data } = state;\n      const filteredUsers = data.filter((user) => user.selected);\n      return {\n        ...state,\n        data: filteredUsers,\n        hasError: false,\n        errorCode: -1,\n      };\n    }\n    case HIDE_DEPARTMENT: {\n      const { data } = state;\n      const { id } = action;\n      const filteredUsers = [...data].filter((user) => user.department_id !== id);\n      return {\n        ...state,\n        data: filteredUsers,\n        hasError: false,\n        errorCode: -1,\n      };\n    }\n    case USERS_HAS_ERROR: {\n      if (!action.data) {\n        return {\n          ...state,\n          hasError: action.data,\n          errorCode: -1,\n          isLoading: false,\n        };\n      }\n      return {\n        ...state,\n        hasError: true,\n        errorCode: `e${action.data}`,\n        isLoading: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default users;\n","// users\nexport const USERS_GET_DATA = 'USERS_GET_DATA';\nexport const HIDE_DEPARTMENT = 'HIDE_DEPARTMENT';\nexport const USERS_IS_LOADING = 'USERS_IS_LOADING';\nexport const USERS_HAS_ERROR = 'USERS_HAS_ERROR';\nexport const HIDE_UNSELECTED = 'HIDE_UNSELECTED';\nexport const USER_GET_TASKS = 'USER_GET_TASKS';\nexport const HIDE_USER_TASKS = 'HIDE_USER_TASKS';\nexport const USER_IS_LOADING = 'USER_IS_LOADING';\n","// Initial state\nimport { INITIAL_STATE } from '../../../common/app-const';\n\nconst auth = (state = INITIAL_STATE.auth, action) => {\n  switch (action.type) {\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default auth;\n","import { combineReducers } from 'redux';\nimport users from './models/users/usersReducer';\nimport auth from './models/auth/authReducer';\n\nexport default combineReducers({\n  users,\n  auth,\n});\n","import axios from 'axios';\n\n// We assume we'll use the auth header with a token in our requests to the server\nconst HttpRequest = (token) => {\n  const options = token\n    ? {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n    : {};\n  return axios.create(options);\n};\n\nexport default HttpRequest;\n","/* eslint-disable no-unused-expressions */\n// imports\nimport HttpRequest from '../utils/HttpRequest';\n\n// TYPE\nexport const API = 'API';\n\n// ACTION\nexport const httpRequestAction = async (action, dispatch, token) => {\n  const {\n    url,\n    method = 'get',\n    data = {},\n    params = {},\n    success,\n    failure,\n    loader,\n  } = action.payload;\n\n  const { base, endpoint } = url;\n  !loader || dispatch(loader(true));\n  const options = {\n    method,\n    url: base ? base + endpoint : endpoint,\n  };\n  if (Object.keys(data).length) { options.data = data; }\n  if (Object.keys(params).length) { options.params = params; }\n  try {\n    const res = await HttpRequest(token)(options);\n    dispatch(success(res.data));\n    !loader || dispatch(loader(false));\n  } catch (e) {\n    dispatch(failure(e.message || ''));\n  }\n};\n\n// Thunk\nexport const api = (action) => (dispatch, getState) => httpRequestAction(action, dispatch, getState().auth.token);\n","import { API, httpRequestAction } from '../api';\n\nconst api = ({ dispatch, getState }) => (next) => (action) => {\n  if (action.type !== API) {\n    return next(action);\n  }\n  httpRequestAction(action, dispatch, getState().auth.token);\n};\n\nexport default api;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport { INITIAL_STATE } from '../../common/app-const';\nimport rootReducer from '../rootReducer';\nimport api from '../middlewares/api';\nimport NodeService from '../../utils/nodeService';\n\nconst middlewares = [\n  thunk,\n  api,\n];\n\nif (!NodeService.isProduction()) {\n  middlewares.push(logger);\n}\n\nconst store = (initialState = INITIAL_STATE) => (\n  createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(...middlewares),\n  )\n);\n\nexport default store;\n","// Types\nimport {\n  USERS_IS_LOADING,\n  USERS_HAS_ERROR,\n  USERS_GET_DATA,\n  HIDE_DEPARTMENT,\n  HIDE_UNSELECTED,\n  USER_GET_TASKS,\n  HIDE_USER_TASKS,\n  USER_IS_LOADING,\n} from './usersTypes';\n// API\nimport { API, api } from '../../api';\n// config\nimport config from '../../../common/config';\n\nexport const usersIsLoading = (isLoading) => ({\n  type: USERS_IS_LOADING,\n  isLoading,\n});\n\nexport const userGetTasks = (id, data) => ({\n  type: USER_GET_TASKS,\n  data,\n  id,\n});\n\nexport const userIsLoading = (id, isLoading) => ({\n  type: USER_IS_LOADING,\n  isLoading,\n  id,\n});\n\nexport const hideUnselectedUsers = () => ({\n  type: HIDE_UNSELECTED,\n});\n\nexport const hideDepartment = (id) => ({\n  type: HIDE_DEPARTMENT,\n  id,\n});\n\nexport const usersGetData = (data, selected) => ({\n  type: USERS_GET_DATA,\n  data,\n  selected,\n});\n\nexport const usersHasError = (data) => ({\n  type: USERS_HAS_ERROR,\n  data,\n});\n\nexport const hideUserTasks = (id) => ({\n  type: HIDE_USER_TASKS,\n  id,\n});\n\nexport const fetchUserTasks = (id) => (api({\n  type: API,\n  payload: {\n    url: {\n      base: 'https://testsh.free.beeceptor.com/gettask',\n      // endpoint: `/users/${id}/tasks\n      endpoint: '',\n    },\n    method: 'get',\n    success: (data) => userGetTasks(id, data),\n    failure: (data) => usersHasError(data),\n    loader: (data) => userIsLoading(id, data),\n  },\n}));\n\nexport const fetchUsers = (firstIndex = 0, endIndex = 10, orderBy = 'department', withTasks = true) => (api({\n  type: API,\n  payload: {\n    url: {\n      base: 'https://testsh.free.beeceptor.com/getusers',\n      // endpoint: `/users/?orderBy=${orderBy}&firstIndex=${firstIndex}&endIndex=${endIndex}&withTasks=${withTasks}`, // TEMP\n      endpoint: '',\n    },\n    method: 'get',\n    success: (data) => usersGetData(data, false),\n    failure: (data) => usersHasError(data),\n    loader: (data) => usersIsLoading(data),\n  },\n}));\n\nexport const fetchUsersByDepartment = (\n  departmentId = 1,\n  firstIndex = 0,\n  endIndex = 10,\n) => (api({\n  type: API,\n  payload: {\n    url: {\n      base: `https://testsh.free.beeceptor.com/users/department/${departmentId}`,\n      // endpoint: `/users/department?id=${departmentId}&firstIndex=${firstIndex}&endIndex=${endIndex}&withTasks=${withTasks}`, // TEMP\n      endpoint: '',\n    },\n    method: 'get',\n    success: (data) => usersGetData(data, true),\n    failure: (data) => usersHasError(data),\n    loader: (data) => usersIsLoading(data),\n  },\n}));\n","const SERVER_PROTOCOL = process.env.REACT_APP_SERVER_PROTOCOL;\nconst SERVER_HOST = process.env.REACT_APP_SERVER_HOST;\nconst API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT;\n\nconst config = {\n  app: {\n    port: process.env.PORT,\n    env: process.env.NODE_ENV,\n  },\n  server: {\n    host: SERVER_HOST,\n    protocol: SERVER_PROTOCOL,\n  },\n  api: {\n    endpoint: API_ENDPOINT,\n    url: `${SERVER_PROTOCOL}://${SERVER_HOST}/${API_ENDPOINT}`,\n  },\n};\n\nexport default config;\n","import React, { useEffect, useState } from 'react';\n// Custom Hooks\nimport usePrevious from '../hooks/usePrevioues';\n\n// ----- Consts & Dicts ----- //\nconst MAX_USERS = 10;\n\nconst HomeController = (props) => {\n  const {\n    hideDepartment,\n    fetchUsers,\n    fetchUsersByDepartment,\n    hideUnselectedUsers,\n    hideUserTasks,\n    fetchUserTasks,\n    users,\n  } = props;\n  const { data } = users;\n\n  // State\n  const [state, setState] = useState({\n    selectedDepartments: [],\n    filterByEmployee: false,\n  });\n  // const prevState = usePrevious(state) || state;\n\n  // ----- useEffects ----- //\n\n  // React to filterByEmployee changes\n  useEffect(() => {\n    const { filterByEmployee } = state;\n    if (!filterByEmployee) {\n      hideUnselectedUsers();\n    } else if (MAX_USERS > data.length) {\n      // We'll only fetch relevant chuncks of users and only when needed.\n      // We'll also fetch the users without having the server actually populating\n      // the tasks to make this request as cheap as possible\n      const reqParams = {\n        firstIndex: data.length,\n        endIndex: MAX_USERS - data.length,\n        orderBy: 'department',\n        withTasks: false,\n      };\n      fetchUsers({ ...reqParams });\n    }\n  }, [state.filterByEmployee]);\n\n  // ----- Callbacks ----- //\n\n  const toggleFilterByEmployee = () => {\n    const { filterByEmployee } = state;\n    setState({ ...state, filterByEmployee: !filterByEmployee });\n  };\n\n  const toggleDepartment = (id) => {\n    const { selectedDepartments } = state;\n    const currentDepartment = selectedDepartments.find((x) => x === id);\n    if (!currentDepartment) {\n      fetchUsersByDepartment(id);\n      setState({ ...state, selectedDepartments: [...selectedDepartments, id] });\n    } else {\n      hideDepartment(id);\n      setState({ ...state, selectedDepartments: selectedDepartments.filter((x) => x !== id) });\n    }\n  };\n\n  const handleUserSelection = (isSelected, id) => {\n    // This means we clicked on a selected user, so we need to hide it\n    if (isSelected) {\n      hideUserTasks(id);\n    } else {\n      fetchUserTasks(id);\n    }\n  };\n\n  const callbacks = {\n    toggleDepartment: (id) => toggleDepartment(id),\n    toggleFilterByEmployee: () => toggleFilterByEmployee(),\n    handleUserSelection: (isSelected, id) => handleUserSelection(isSelected, id),\n  };\n\n  const { View } = props;\n  return (\n    <View\n      {...props}\n      {...state}\n      {...callbacks}\n    />\n  );\n};\n\nexport default HomeController;\n","import React from 'react';\n// styles\nimport styles from './Filters.module.scss';\n// Components\nimport { Checkbox } from 'semantic-ui-react';\n// Common\nimport { DEPARTMENTS } from '../../common/app-const';\n\nconst Filters = ({\n  toggleDepartment,\n  toggleFilterByEmployee,\n  filterByEmployee,\n}) => (\n  <div className={styles.filters_container}>\n    <div className={styles.filter_by_employee}>\n      <p> Filter By Employee </p>\n      <Checkbox\n        onClick={() => toggleFilterByEmployee()}\n        toggle\n        checked={filterByEmployee}\n      />\n    </div>\n    <div className={styles.departments}>\n      {DEPARTMENTS.map((department, i) => (\n        <Checkbox\n          onClick={() => toggleDepartment(i + 1)}\n          label={department}\n        />\n      ))}\n    </div>\n  </div>\n);\n\nexport default Filters;\n","import React from 'react';\n// styles\nimport styles from './UserRow.module.scss';\n// Utils\nimport classnames from 'classnames';\n// Components\nimport { Checkbox } from 'semantic-ui-react';\n\n// ----- Help Components ----- //\nconst User = ({ avatar, name }) => {\n  const x = 5;\n  return (\n    <div className={styles.user}>\n      <img\n        alt={`${name}_avatar`}\n        className={styles.avatar}\n        src={avatar}\n      />\n      <p>{name}</p>\n    </div>\n  );\n};\n\nconst Task = ({ task }) => {\n  // This means we didn't fetch tasks for this user\n  if (!Object.keys(task).length) {\n    return <></>;\n  }\n  const { id, title, color } = task;\n  return (\n    <div style={{ backgroundColor: !id ? 'black' : color }} className={styles.task}>\n      {!id\n        ? '?'\n        : title}\n    </div>\n  );\n};\n\nconst Selected = ({ selected, toggleSelection }) => {\n  const x = 5;\n  return (\n    <div className={styles.selected_container}>\n      <Checkbox\n        onClick={() => toggleSelection()}\n        checked={selected}\n        className={styles.selected_box}\n      />\n    </div>\n  );\n};\n\nconst UsersRow = ({ user, filterByEmployee, handleUserSelection }) => {\n  const {\n    task, name, avatar, selected, id, isLoading,\n  } = user;\n  return (\n    <div className={classnames(styles.row_container, { [styles.loading]: isLoading })}>\n      {filterByEmployee && (\n      <Selected\n        toggleSelection={() => handleUserSelection(selected, id)}\n        selected={selected}\n      />\n      )}\n      <User avatar={avatar} name={name} />\n      <Task task={task} />\n    </div>\n  );\n};\n\nexport default UsersRow;\n","import React from 'react';\n// Components\nimport UserRow from './UserRow';\n// Utils\nimport classnames from 'classnames';\n// styles\nimport styles from './Table.module.scss';\n\n// ----- Help Components ----- //\nconst TableHeader = () => (\n  <div className={styles.table_header}>\n    <div className={styles.employees}>Employees</div>\n    <div className={styles.days}>{(new Date()).toDateString()}</div>\n  </div>\n);\n\nconst Table = ({\n  users,\n  filterByEmployee,\n  handleUserSelection,\n}) => {\n  const { data, isLoading } = users;\n  return (\n    <div className={styles.table_container}>\n      <TableHeader />\n      {!data.length\n        ? <div className={styles.no_users}> No users selected </div>\n        : (\n          <div className={classnames(styles.table_content, { [styles.loading]: isLoading })}>\n            {data.map((user) => (\n              <UserRow\n                handleUserSelection={handleUserSelection}\n                filterByEmployee={filterByEmployee}\n                user={user}\n              />\n            ))}\n          </div>\n        )}\n\n    </div>\n  );\n};\n\nexport default Table;\n","import React from 'react';\n// styles\nimport styles from './HomeView.module.scss';\n// Components\nimport Filters from '../components/TasksTable/Filters';\nimport Table from '../components/TasksTable/Table';\n\nconst HomeView = ({\n  users,\n  toggleDepartment,\n  toggleFilterByEmployee,\n  filterByEmployee,\n  handleUserSelection,\n}) => (\n  <div className={styles.wrapper}>\n    <div className={styles.tasks_manager_container}>\n      <Filters\n        toggleFilterByEmployee={toggleFilterByEmployee}\n        filterByEmployee={filterByEmployee}\n        toggleDepartment={toggleDepartment}\n      />\n      <Table\n        handleUserSelection={handleUserSelection}\n        filterByEmployee={filterByEmployee}\n        users={users}\n      />\n    </div>\n  </div>\n);\n\nexport default HomeView;\n","import React from 'react';\n// Redux\nimport { connect } from 'react-redux';\nimport {\n  fetchUsers,\n  fetchUsersByDepartment,\n  hideDepartment,\n  hideUnselectedUsers,\n  fetchUserTasks,\n  hideUserTasks,\n} from '../redux/models/users/usersActions';\n// Components\nimport HomeController from '../controllers/HomeController';\nimport HomeView from '../views/HomeView';\n\nconst Home = (props) => <HomeController {...props} View={HomeView} />;\n\nconst mapStateToProps = (state) => ({\n  users: state.users,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchUsers: (firstIndex,\n    endIndex,\n    orderBy,\n    withTasks) => dispatch(fetchUsers(firstIndex, endIndex, orderBy, withTasks)),\n  fetchUsersByDepartment: (firstIndex,\n    endIndex,\n    orderBy,\n    withTasks) => dispatch(fetchUsersByDepartment(firstIndex, endIndex, orderBy, withTasks)),\n  hideDepartment: (id) => dispatch(hideDepartment(id)),\n  hideUnselectedUsers: () => dispatch(hideUnselectedUsers()),\n  fetchUserTasks: (id) => dispatch(fetchUserTasks(id)),\n  hideUserTasks: (id) => dispatch(hideUserTasks(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\n// Router\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// Pages\nimport { HOME } from './universal/pages';\n// Page Components\nimport HomeIndex from './pages/HomeIndex';\n\n// I'm setting the app like this assuming it would later have additional pages\nconst App = () => (\n  <>\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact render={(props) => (<HomeIndex {...props} page={HOME} />)} />\n      </Switch>\n    </Router>\n  </>\n);\n\nexport default App;\n","export const HOME = 'home';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/configureStore';\nimport App from './App';\n// Global styles\nimport './globals.scss';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store()}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filters_container\":\"Filters_filters_container__3gymB\",\"filter_by_employee\":\"Filters_filter_by_employee__33KqP\",\"departments\":\"Filters_departments__1HrZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"HomeView_wrapper__2df22\",\"tasks_manager_container\":\"HomeView_tasks_manager_container__3_6Wt\"};"],"sourceRoot":""}